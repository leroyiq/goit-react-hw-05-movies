{"version":3,"file":"static/js/287.283adcec.chunk.js","mappings":"4SAEaA,EAAaC,EAAAA,GAAAA,OAAH,mbAoBVC,EAAMD,EAAAA,GAAAA,IAAH,wLAUHE,EAAUF,EAAAA,GAAAA,IAAH,wDAIPG,EAAUH,EAAAA,GAAAA,IAAH,gRAePI,EAAMJ,EAAAA,GAAAA,IAAH,uJ,iBCJhB,EAzCkB,SAAC,GAA2B,IAAzBK,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACrBC,EAAqEF,EAArEE,YAAaC,EAAwDH,EAAxDG,MAAOC,EAAiDJ,EAAjDI,aAAcC,EAAmCL,EAAnCK,SAAUC,EAAyBN,EAAzBM,OAAQC,EAAiBP,EAAjBO,aAE5D,OACE,iCACE,UAACb,EAAD,CAAYc,KAAK,SAASP,QAASA,EAAnC,WACE,SAAC,MAAD,CAA2BQ,MAAO,CAAEC,SAAU,MAAQ,YAExD,UAACd,EAAD,YACE,SAACG,EAAD,CAAKY,IAAG,UAXG,mCAWH,OAAkBT,GAAeU,IAAKT,KAC9C,UAACN,EAAD,YACE,0BACGM,EAAM,KAAGI,EAAaM,MAAM,KAAK,GAAG,QAEvC,yBAAG,gBAAcC,SAAwB,GAAfV,GAAmB,QAC7C,mBACA,wBACE,uBAAG,gBAEL,mBACA,cAAGK,MAAO,CAAEM,SAAU,SAAtB,SAAkCV,KAElC,mBACA,2BACE,uBAAG,aAEJC,IAAU,uBAAIA,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,KAAO,IAAjB,aAGnC,UAACpB,EAAD,YACE,wBAAI,4BAEJ,SAAC,KAAD,CAAMqB,GAAG,OAAT,SAAgB,UAChB,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,gBAGrB,SAAC,KAAD,MAGL,ECPD,EA3BqB,WACnB,IAAMC,GAAeC,EAAAA,EAAAA,MACfC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,8GAEWC,EAAAA,EAAAA,IAAY,GAAD,OAAIC,EAAAA,EAAAA,WAAJ,OAAyBL,IAF/C,OAEPM,EAFO,OAIbP,EAAaO,GAJA,gDAMbC,EAAAA,GAAAA,MAAY,sBAAZ,MANa,yDAAH,qDASdJ,GACD,GAAE,CAACH,IAEGF,IAAa,SAAC,EAAD,CAAWzB,SAAUyB,EAAWxB,QAjBpC,WACdqB,EAASa,MAAQf,EAAaE,EAASa,MAAMC,MAAQhB,EAAa,IACnE,GAgBF,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieCard.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonBack = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 80px;\n  padding: 10px;\n  border-radius: 5px;\n  border: none;\n  background-color: #d6e1e3;\n  margin-left: 15px;\n  margin-top: 15px;\n  cursor: pointer;\n  transition: transform 250ms ease-out;\n  &:hover {\n    background-color: #20329d;\n    color: #d6e1e3;\n    transform: translate(0px, 0px) scale(1.03, 1.03);\n  }\n`;\n\nexport const DIV = styled.div`\n  display: flex;\n  margin-left: 15px;\n  margin-right: 15px\n  margin-bottom: 10px;\n  @media screen and (max-width: 738px) {\n    display: block;\n    \n  }\n`;\nexport const DIVinfo = styled.div`\n  scale: 0.9;\n  padding: 5px;\n`;\nexport const AddInfo = styled.div`\n  display: block;\n  padding: 10px 15px;\n  border-top: 2px solid #53585354;\n  border-bottom: 2px solid #53585354;\n  & a {\n    text-decoration: none;\n    display: block;\n    &:hover {\n      color: orange;\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const IMG = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 738px) {\n    max-width: 100%;\n    height: 50%;\n  }\n`;\n","import { BsFillArrowLeftCircleFill } from 'react-icons/bs';\nimport { AddInfo, ButtonBack, DIV, DIVinfo, IMG } from './MovieDetails.styled';\nimport { Link, Outlet } from 'react-router-dom';\n\nconst imgBaseUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieCard = ({ dataCard, onClick }) => {\n  const { poster_path, title, vote_average, overview, genres, release_date } = dataCard;\n\n  return (\n    <>\n      <ButtonBack type=\"button\" onClick={onClick}>\n        <BsFillArrowLeftCircleFill style={{ fontSize: 18 }} /> Back\n      </ButtonBack>\n      <DIV>\n        <IMG src={`${imgBaseUrl}${poster_path}`} alt={title} />\n        <DIVinfo>\n          <h2>\n            {title} ({release_date.split('-')[0]})\n          </h2>\n          <p>User score : {parseInt(vote_average * 10)}%</p>\n          <br />\n          <p>\n            <b>Overview</b>\n          </p>\n          <br />\n          <p style={{ maxWidth: '500px' }}>{overview}</p>\n\n          <br />\n          <span>\n            <b>Genres</b>\n          </span>\n          {genres && <p>{genres.map(genre => genre.name + '  ')}</p>}\n        </DIVinfo>\n      </DIV>\n      <AddInfo>\n        <h3>Additional information</h3>\n\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </AddInfo>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { ApiServices } from 'Api/ApiServices';\nimport { toast } from 'react-hot-toast';\nimport Endpoint from 'Api/Endpoint';\nimport { useState } from 'react';\nimport MovieCard from './MovieCard';\n\n\n\nconst MovieDetails = () => {\n  const navigateBack = useNavigate();\n  const location = useLocation();\n  const [movieInfo, setMovieInfo] = useState('');\n\n  const { movieId } = useParams();\n\n  const onClick = () => {\n    location.state ? navigateBack(location.state.from) : navigateBack('/');\n  };\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const movieData = await ApiServices(`${Endpoint.movieInfo}${movieId}`);\n\n        setMovieInfo(movieData);\n      } catch (error) {\n        toast.error('Sory error trending', error);\n      }\n    };\n    getMovie();\n  }, [movieId]);\n\n  return movieInfo && <MovieCard dataCard={movieInfo} onClick={onClick} />;\n};\n\nexport default MovieDetails;\n"],"names":["ButtonBack","styled","DIV","DIVinfo","AddInfo","IMG","dataCard","onClick","poster_path","title","vote_average","overview","genres","release_date","type","style","fontSize","src","alt","split","parseInt","maxWidth","map","genre","name","to","navigateBack","useNavigate","location","useLocation","useState","movieInfo","setMovieInfo","movieId","useParams","useEffect","getMovie","ApiServices","Endpoint","movieData","toast","state","from"],"sourceRoot":""}