{"version":3,"file":"static/js/186.9afd7361.chunk.js","mappings":"iOAyCA,UAnCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEUC,EAAAA,EAAAA,IAAa,UAAD,OAAWJ,EAAX,aAFtB,OAERK,EAFQ,OAIdN,EAAWM,GAJG,gDAMdC,EAAAA,GAAAA,MAAY,qBAAZ,MANc,yDAAH,qDASfH,GACD,GAAE,CAACH,IAEmB,IAAnBF,EAAQS,QACH,uBAAG,8CAIV,wBACGT,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,2BACE,0BAAI,WAASF,MACb,uBAAIC,MAFGC,EAKZ,KAGN,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { fetchReviews } from 'Api/ApiServices';\n\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReview = async () => {\n      try {\n        const movieData = await fetchReviews(`/movie/${movieId}/reviews`);\n\n        setReviews(movieData);\n      } catch (error) {\n        toast.error('Sory error credits', error);\n      }\n    };\n    getReview();\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie</p>;\n  }\n\n  return (\n    <ul>\n      {reviews.map(({ author, content, id }) => {\n        return (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReview","fetchReviews","movieData","toast","length","map","author","content","id"],"sourceRoot":""}