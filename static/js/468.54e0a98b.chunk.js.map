{"version":3,"file":"static/js/468.54e0a98b.chunk.js","mappings":"+QAgEA,EA1DoB,WAClB,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAQP,EAAaQ,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MA8BjB,OAhBAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CACA,IAAMK,EAAS,mCAAG,8GAEUC,EAAAA,EAAAA,IAAU,UAAD,OAAWN,IAF9B,UAGW,KADnBO,EAFQ,QAGAC,OAHA,yCAILC,EAAAA,GAAAA,MAAY,wCAJP,OAMdZ,EAAaU,GANC,gDAQdE,EAAAA,GAAAA,MAAY,4BAAZ,MARc,yDAAH,qDAWfJ,GAZkB,CAanB,GAAE,CAACL,KAGF,iCACE,kBAAMU,SAxBW,SAAAC,GACnBA,EAAMC,iBAENlB,EAAgB,CAAEM,MAAOF,GAC1B,EAoBiCe,MAAO,CAAEC,OAAQ,QAA/C,WACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,MAAOnB,EAAWoB,UAAQ,EAACC,SA/B7C,SAAAR,GAClB,IAAQM,EAAUN,EAAMS,OAAhBH,MACR,GAAc,KAAVA,EAAc,OAAOvB,EAAgB,CAAC,GAC1CK,EAAakB,EACd,KA4BK,mBAAQF,KAAK,SAAb,SAAsB,cAEvBnB,IACC,wBACGA,EAAUyB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACpB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMxB,GAA1C,SACGqB,KAFID,EAMZ,QAKV,ECpDD,EARc,WACZ,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["components/SearchMovie/SearchMovie.jsx","page/Movie/Movie.jsx"],"sourcesContent":["import { FindMovie } from 'Api/ApiServices';\n\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst SearchMovie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieList, setMovieList] = useState();\n  const [findMovie, setFindMovie] = useState('');\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const inputChange = event => {\n    const { value } = event.target;\n    if (value === '') return setSearchParams({});\n    setFindMovie(value);\n  };\n\n  const searchSubmit = event => {\n    event.preventDefault();\n\n    setSearchParams({ query: findMovie });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    const getSearch = async () => {\n      try {\n        const movieData = await FindMovie(`&query=${query}`);\n        if (movieData.length === 0) {\n          return toast.error('Movies not found. Please try again.');\n        }\n        setMovieList(movieData);\n      } catch (error) {\n        toast.error('Sory error request movies', error);\n      }\n    };\n    getSearch();\n  }, [query]);\n\n  return (\n    <>\n      <form onSubmit={searchSubmit} style={{ margin: '15px' }}>\n        <input type=\"text\" name=\"query\" value={findMovie} required onChange={inputChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movieList && (\n        <ul>\n          {movieList.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default SearchMovie;\n","import SearchMovie from 'components/SearchMovie/SearchMovie';\n\nconst Movie = () => {\n  return (\n    <>\n      <SearchMovie />\n    </>\n  );\n};\n\nexport default Movie;\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","movieList","setMovieList","findMovie","setFindMovie","query","get","location","useLocation","useEffect","getSearch","FindMovie","movieData","length","toast","onSubmit","event","preventDefault","style","margin","type","name","value","required","onChange","target","map","id","title","to","state","from"],"sourceRoot":""}